name: Publish Docker image
on:
  workflow_dispatch:
  push:
    branches:
      - workflow-test
  release:
    types: [published]

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - 
        name: Check out the repo
        uses: actions/checkout@v2
          # Optionally: unshallow as a separate operation
      -
        name: Repo metadata
        id: repo
        uses: actions/github-script@v3
        with:
          script: |
            const repo = await github.repos.get(context.repo)
            return repo.data
      -
        name: Prepare
        id: prep
        run: |
          git fetch --prune --unshallow
          DOCKER_IMAGE=carlsmig/stig-manager-test
          BRANCH=$(git symbolic-ref --short HEAD)
          SHA=$(git rev-parse --short=10 HEAD)
          DESCRIBE=$(git describe --tags)
          TAG=$(git describe --tags --abbrev=0)
          TAGS="${DOCKER_IMAGE}:latest,${DOCKER_IMAGE}:${TAG}"
          echo ::set-output name=version::${TAG}
          echo ::set-output name=tag::${TAG}
          echo ::set-output name=branch::${BRANCH}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=describe::${DESCRIBE}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')                    
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - 
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
#           pull: true
          push: true
          build-args: |
            COMMIT_BRANCH=${{ steps.prep.outputs.branch }}
            COMMIT_SHA=${{ github.sha }}
            COMMIT_TAG=${{ steps.prep.outputs.tag }}
            COMMIT_DESCRIBE=${{ steps.prep.outputs.describe }}
#           cache-from: type=registry,ref=myorg/myrepository:latest
#           cache-to: type=inline
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.title=${{ fromJson(steps.repo.outputs.result).name }}
            org.opencontainers.image.description=${{ fromJson(steps.repo.outputs.result).description }}
            org.opencontainers.image.url=${{ fromJson(steps.repo.outputs.result).html_url }}
            org.opencontainers.image.source=${{ fromJson(steps.repo.outputs.result).clone_url }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ steps.prep.outputs.describe }}
            org.opencontainers.image.licenses=${{ fromJson(steps.repo.outputs.result).license.spdx_id }}
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      -
        name: Update Docker Hub Description
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: carlsmig/stig-manager-test
          short-description: An API and Web client for managing STIG assessments.
          readme-filepath: ./docs/DockerHub_Readme.md
          
          
          

          
          
          
          
          
